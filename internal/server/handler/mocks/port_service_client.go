// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"
import grpc "google.golang.org/grpc"
import mock "github.com/stretchr/testify/mock"
import portApi "github.com/fvrepo/port-domain/pkg/grpcapi/port"

// PortServiceClient is an autogenerated mock type for the PortServiceClient type
type PortServiceClient struct {
	mock.Mock
}

// GetAllPorts provides a mock function with given fields: ctx, in, opts
func (_m *PortServiceClient) GetAllPorts(ctx context.Context, in *portApi.GetAllPortsRequest, opts ...grpc.CallOption) (*portApi.GetAllPortsResponse, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *portApi.GetAllPortsResponse
	if rf, ok := ret.Get(0).(func(context.Context, *portApi.GetAllPortsRequest, ...grpc.CallOption) *portApi.GetAllPortsResponse); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*portApi.GetAllPortsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *portApi.GetAllPortsRequest, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SavePort provides a mock function with given fields: ctx, in, opts
func (_m *PortServiceClient) SavePort(ctx context.Context, in *portApi.SavePortRequest, opts ...grpc.CallOption) (*portApi.SavePortResponse, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *portApi.SavePortResponse
	if rf, ok := ret.Get(0).(func(context.Context, *portApi.SavePortRequest, ...grpc.CallOption) *portApi.SavePortResponse); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*portApi.SavePortResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *portApi.SavePortRequest, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
