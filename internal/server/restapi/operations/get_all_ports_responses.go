// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/client-api/internal/server/models"
)

// GetAllPortsOKCode is the HTTP code returned for type GetAllPortsOK
const GetAllPortsOKCode int = 200

/*GetAllPortsOK OK

swagger:response getAllPortsOK
*/
type GetAllPortsOK struct {

	/*
	  In: Body
	*/
	Payload map[string]models.Port `json:"body,omitempty"`
}

// NewGetAllPortsOK creates GetAllPortsOK with default headers values
func NewGetAllPortsOK() *GetAllPortsOK {

	return &GetAllPortsOK{}
}

// WithPayload adds the payload to the get all ports o k response
func (o *GetAllPortsOK) WithPayload(payload map[string]models.Port) *GetAllPortsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all ports o k response
func (o *GetAllPortsOK) SetPayload(payload map[string]models.Port) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllPortsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetAllPortsInternalServerErrorCode is the HTTP code returned for type GetAllPortsInternalServerError
const GetAllPortsInternalServerErrorCode int = 500

/*GetAllPortsInternalServerError General server error

swagger:response getAllPortsInternalServerError
*/
type GetAllPortsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllPortsInternalServerError creates GetAllPortsInternalServerError with default headers values
func NewGetAllPortsInternalServerError() *GetAllPortsInternalServerError {

	return &GetAllPortsInternalServerError{}
}

// WithPayload adds the payload to the get all ports internal server error response
func (o *GetAllPortsInternalServerError) WithPayload(payload *models.Error) *GetAllPortsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all ports internal server error response
func (o *GetAllPortsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllPortsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
